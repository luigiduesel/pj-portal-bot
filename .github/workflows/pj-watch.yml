name: PJ Watch (alle Krankenhäuser)
on:
  schedule:
    - cron: "*/15 5-22 * * *"   # alle 15 Min, 07–24 Uhr (Sommerzeit UTC+2)
  workflow_dispatch:             # manuell startbar

# verhindert Überschneidungen – neuer Run cancelt den alten
concurrency:
  group: pj-watch
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Gesamter Job max 10 Minuten
    
    steps:
      - name: Prüfe alle Krankenhäuser nacheinander (Einmal-Check, ohne Wartezeit)
        env:
          PUSHOVER_USER: ${{ secrets.pushover_user }}
          PUSHOVER_TOKEN: ${{ secrets.pushover_token }}
          PJ_USER: ${{ secrets.pjportal_user }}
          PJ_PWD: ${{ secrets.pjportal_pwd }}
          AJAX_UID: ${{ secrets.ajax_uid }}
          PJ_TAG: ${{ secrets.pj_tag }}
          TERM: ${{ secrets.term }}
          HOSPITAL_LIST: ${{ secrets.hospital_list }}
        run: |
          set -euo pipefail
          
          # Safety: Secret gefüllt?
          if [ -z "${HOSPITAL_LIST//[$'\t\r\n ']/}" ]; then
            echo "ERROR: HOSPITAL_LIST ist leer."
            exit 1
          fi
          
          run_one() {
            local HOSP="$1"
            echo "==> Check für: $HOSP ($(date))"
            
            # Bot maximal 90 Sekunden laufen lassen
            # - Der Bot macht seinen Check
            # - Nach 90 Sek wird er gestoppt (sollte reichen für einen Check)
            # - Nach 100 Sek wird er gekillt falls TERM nicht reicht
            timeout --kill-after=100 90 \
              docker run --rm --init \
                -e pushover_user="$PUSHOVER_USER" \
                -e pushover_token="$PUSHOVER_TOKEN" \
                -e pjportal_user="$PJ_USER" \
                -e pjportal_pwd="$PJ_PWD" \
                -e ajax_uid="$AJAX_UID" \
                -e pj_tag="$PJ_TAG" \
                -e hospital="$HOSP" \
                -e term="$TERM" \
                -e check_frequency_lower_limit="1" \
                -e check_frequency_upper_limit="1" \
                -e cookie_filepath="/usr/src/app/cookie.txt" \
                madrhr/pjportalbot || {
                  CODE=$?
                  if [ $CODE -eq 124 ] || [ $CODE -eq 137 ]; then
                    echo "✓ Timeout erreicht (normal) - Check wurde durchgeführt"
                  else
                    echo "⚠️ Fehler Code $CODE bei $HOSP"
                  fi
                  return 0  # Weitermachen mit nächstem Krankenhaus
                }
            
            echo "✓ $HOSP erfolgreich abgeschlossen"
          }
          
          # Alle Krankenhäuser durchgehen
          COUNT=0
          while IFS= read -r line || [ -n "$line" ]; do
            H="$(echo "$line" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')"
            [ -z "$H" ] && continue
            
            COUNT=$((COUNT + 1))
            echo ""
            echo "========================================="
            echo "Krankenhaus $COUNT"
            echo "========================================="
            
            run_one "$H"
            
            # 2 Sekunden Pause zwischen Checks
            sleep 2
          done <<EOF
          ${HOSPITAL_LIST}
          EOF
          
          echo ""
          echo "========================================="
          echo "Alle $COUNT Checks erledigt"
          echo "========================================="
          
          # Docker cleanup
          docker container prune -f || true
          
          exit 0
