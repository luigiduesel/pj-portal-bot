name: PJ Watch (alle Krankenhäuser)

on:
  schedule:
    - cron: "*/15 5-22 * * *"   # alle 15 Minuten, 07–24 Uhr (Sommerzeit, UTC+2)
  workflow_dispatch:             # manuell startbar

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    
      - name: Prüfe alle Krankenhäuser (parallel)
        env:
          PUSHOVER_USER: ${{ secrets.pushover_user }}
          PUSHOVER_TOKEN: ${{ secrets.pushover_token }}
          PJ_USER: ${{ secrets.pjportal_user }}
          PJ_PWD: ${{ secrets.pjportal_pwd }}
          AJAX_UID: ${{ secrets.ajax_uid }}
          PJ_TAG: ${{ secrets.pj_tag }}
          TERM: ${{ secrets.term }}
          HOSPITAL_LIST: ${{ secrets.hospital_list }}
        run: |
          set -euo pipefail
          echo "Starte $(printf '%s\n' "$HOSPITAL_LIST" | grep -c .) Klinik-Checks ..."
          printf '%s\n' "$HOSPITAL_LIST" | grep . | \
            xargs -I{} -P 4 docker run --rm \
              -e pushover_user="$PUSHOVER_USER" \
              -e pushover_token="$PUSHOVER_TOKEN" \
              -e pjportal_user="$PJ_USER" \
              -e pjportal_pwd="$PJ_PWD" \
              -e ajax_uid="$AJAX_UID" \
              -e pj_tag="$PJ_TAG" \
              -e hospital="{}" \
              -e term="$TERM" \
              -e check_frequency_lower_limit="1" \
              -e check_frequency_upper_limit="2" \
              -e cookie_filepath="/usr/src/app/cookie.txt" \
              madrhr/pjportalbot
          echo "Alle Checks erledigt."


          # Mehrzeiliges Secret sauber verarbeiten
          printf '%s\n' "$HOSPITAL_LIST" | while IFS= read -r line; do
            H="$(echo "$line" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')"
            [ -z "$H" ] && continue
            run_one "$H"
          done
